{"version":3,"sources":["components/Search.js","components/Categories.js","styles/GridBoxStyles.js","styles/ImagesStyles.js","Api.js","components/LazyImage.js","components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","handleSearchTermChange","event","setState","query","target","value","state","type","placeholder","this","searchTerm","onChange","Component","Categories","className","GridBox","styled","div","url","loadingAnimation","keyframes","ImageWrapper","Placeholder","StyledImage","img","attrs","src","alt","LazyImage","placeholderRef","useRef","removePlaceholder","current","remove","ref","image","onLoad","onError","id","clientID","getInitialPics","a","axios","get","then","response","Grid","photos","data","length","map","photo","urls","regular","alt_description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA4BeA,G,wDAvBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,uBAAyB,SAACC,GACtB,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,SAPxB,EAAKC,MAAQ,CACTH,MAAO,IAJI,E,qDAef,OACI,+BACI,uBAAOI,KAAK,OAAOC,YAAY,SAASH,MAAOI,KAAKH,MAAMI,WAAYC,SAAUF,KAAKT,+B,GAlBhFY,cCgBNC,G,6KAfP,OACI,8BACI,+BACI,oBAAIC,UAAU,SAAd,qBACA,0CACA,4CACA,8CACA,wCACA,iD,GAVKF,c,ohBCDlB,IAAMG,EAAUC,IAAOC,IAAV,K,w0BCCpB,ICEIC,EDFEC,EAAkBC,YAAF,KASTC,EAAcL,IAAOC,IAAT,KAUZK,EAAaN,IAAOC,IAAT,IAORE,GAGHI,EAAcP,IAAOQ,IAAIC,OAAM,SAAA1B,GAAK,MAAK,CAClD2B,IAAK3B,EAAM2B,IACXC,IAAK5B,EAAM4B,OAFYX,CAAH,K,iBEXTY,EAhBG,SAAC7B,GACf,IAAM8B,EAAiBC,iBAAO,MAExBC,EAAmB,WACrBF,EAAeG,QAAQC,UAE3B,OACI,eAACZ,EAAD,WACI,cAACC,EAAD,CAAaY,IAAKL,IAClB,cAAC,IAAD,UACI,cAACN,EAAD,CAA4BG,IAAK3B,EAAMoC,MAAOR,IAAK5B,EAAM4B,IAAKS,OAAQL,EAAmBM,QAASN,GAAhFhC,EAAMuC,QAHbvC,EAAMuC,K,0CDT3BC,EAAW,mEAUJC,EAAc,uCAAG,sBAAAC,EAAA,6DAC1BvB,EAAG,4DAAwDqB,EAAxD,kBAVgB,IASO,kBAEnBG,IAAMC,IAAIzB,GAChB0B,MAAK,SAAAC,GACF,OAAOA,MAJe,2CAAH,qDE2BZC,E,kDAhCX,WAAY/C,GAAQ,IAAD,8BACf,cAAMA,IAEDO,MAAQ,CACRyC,OAAQ,IAJE,E,gEASC,IAAD,OACfP,IAAiBI,MAAK,SAAAC,GAClB,EAAK3C,SAAS,CACV6C,OAAQF,EAASG,Y,+BAMnB,IACCD,EAAUtC,KAAKH,MAAfyC,OACP,OACI,cAAChC,EAAD,UACKgC,EAAOE,OACRF,EAAOG,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAA0BhB,MAAOgB,EAAMC,KAAKC,QAAS1B,IAAKwB,EAAMG,iBAAhDH,EAAMb,OAE1B,W,GA3BG1B,aCaJ2C,MAff,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,mCACI,sBAAKA,UAAU,MAAf,UACI,oCACA,cAAC,EAAD,OAEJ,cAAC,EAAD,OAEJ,cAAC,EAAD,QCHS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b6cc5df4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../styles/search.css'\r\n\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            query: '' \r\n        }\r\n    }\r\n    \r\n    handleSearchTermChange = (event) => {\r\n        this.setState({\r\n            query: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input type='text' placeholder='Search' value={this.state.searchTerm} onChange={this.handleSearchTermChange}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from 'react'\r\nimport '../styles/categories.css'\r\n\r\nclass Categories extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    <li className=\"active\">For You</li>\r\n                    <li>Potraits</li>\r\n                    <li>Landscapes</li>\r\n                    <li>Architecture</li>\r\n                    <li>People</li>\r\n                    <li>Nature</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories","import styled from 'styled-components'\r\n\r\nexport const GridBox = styled.div`\r\n    position: relative;\r\n    top: 14em;\r\n    width:75vw;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 1em;\r\n    padding: 1em;\r\n    margin: 0 auto;\r\n\r\n    @media only screen and (max-width:767px){\r\n        grid-template-columns: 1fr;\r\n        top: 10em;\r\n        width: 90vw;\r\n    }\r\n    @media only screen and (min-width:768px) and (max-width: 992px){\r\n        grid-template-columns: 1fr 1fr;\r\n        top: 12em;\r\n    }\r\n`;","import styled, {keyframes} from 'styled-components'\r\n\r\n\r\nconst loadingAnimation= keyframes`\r\n    0%, 100%{\r\n        background-color: #fff;\r\n    }\r\n    50%{\r\n        background-color: #ccc;\r\n    }\r\n`;\r\n\r\nexport const ImageWrapper= styled.div`\r\n    position: relative;    \r\n    width: 100%;\r\n    height:30vw;\r\n\r\n    @media only screen and (max-width:767px){\r\n        height: 70vw;\r\n    }\r\n`;\r\n\r\nexport const Placeholder= styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 20px;\r\n    animation:${loadingAnimation} 5s cubic-bezier(0.4, 0, 1, 1) infinite;\r\n`;\r\n\r\nexport const StyledImage = styled.img.attrs(props => ({\r\n    src: props.src,\r\n    alt: props.alt,\r\n}))`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n`;","import axios from 'axios'\r\n\r\n\r\nconst clientID = \"1e93497bee7b143fe497bd50d3baaac2536d4d7abfc0fea16090aa38614ad135\";\r\nconst numberOfPhotos = 30;\r\nlet url;\r\n\r\n\r\nexport const getSearchResults =  (searchValue) => {\r\n    url = searchValue ? `https://api.unsplash.com/photos/random/?client_id=${clientID}&count=${numberOfPhotos}&query=${searchValue}`: `https://api.unsplash.com/photos/random/?client_id=${clientID}&count=${numberOfPhotos}` ;\r\n    return axios.get(url).then(response => response.json())\r\n};\r\n\r\nexport const getInitialPics = async () => {\r\n    url = `https://api.unsplash.com/photos/random/?client_id=${clientID}&count=${numberOfPhotos}`;\r\n    return axios.get(url)\r\n    .then(response => {\r\n        return response\r\n    });\r\n}","import React, {useRef} from 'react'\r\nimport {ImageWrapper, Placeholder, StyledImage} from '../styles/ImagesStyles'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\n\r\nconst LazyImage = (props) => {\r\n    const placeholderRef = useRef(null);\r\n\r\n    const removePlaceholder= () => {\r\n        placeholderRef.current.remove();\r\n    }\r\n    return (\r\n        <ImageWrapper key={props.id}>\r\n            <Placeholder ref={placeholderRef}/>\r\n            <LazyLoad>\r\n                <StyledImage key={props.id} src={props.image} alt={props.alt} onLoad={removePlaceholder} onError={removePlaceholder}/>\r\n            </LazyLoad>\r\n        </ImageWrapper>\r\n    ) \r\n}\r\n\r\nexport default LazyImage","import React, { Component } from 'react'\r\nimport {GridBox} from '../styles/GridBoxStyles'\r\nimport LazyImage from './LazyImage'\r\nimport {getInitialPics} from '../Api'\r\n\r\n\r\n\r\nclass Grid extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             photos: []\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        getInitialPics().then(response => {\r\n            this.setState({\r\n                photos: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {photos} = this.state;\r\n        return (\r\n            <GridBox>\r\n                {photos.length ? \r\n                photos.map(photo => \r\n                    <LazyImage key={photo.id} image={photo.urls.regular} alt={photo.alt_description}/>\r\n                    ) : \r\n                null\r\n                }\r\n            </GridBox>\r\n        )}\r\n}\r\n\r\nexport default Grid;\r\n","import './styles/App.css';\nimport Search from './components/Search'\nimport Categories from './components/Categories'\nimport Grid from './components/Grid'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n          <div className='Nav'>\n              <h1>PG</h1>\n              <Search />\n          </div>\n          <Categories />\n      </header>\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}